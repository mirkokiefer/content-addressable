// Generated by CoffeeScript 1.3.3
(function() {
  var ContentAddressable, computeHash,
    __slice = [].slice;

  computeHash = require('sha1');

  ContentAddressable = (function() {

    function ContentAddressable(_arg) {
      this.store = _arg.store;
    }

    ContentAddressable.prototype.write = function(data, cb) {
      var hash;
      hash = computeHash(data);
      this.store.write(hash, data);
      if (cb) {
        return cb(null, hash);
      } else {
        return hash;
      }
    };

    ContentAddressable.prototype.read = function(hash, cb) {
      return this.store.read(hash, cb);
    };

    ContentAddressable.prototype.writeAll = function(data, cb) {
      var each, hashs, key, keyValues, value;
      keyValues = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          each = data[_i];
          _results.push({
            key: computeHash(each),
            value: each
          });
        }
        return _results;
      })();
      hashs = (function() {
        var _i, _len, _ref, _results;
        _results = [];
        for (_i = 0, _len = keyValues.length; _i < _len; _i++) {
          _ref = keyValues[_i], key = _ref.key, value = _ref.value;
          _results.push(key);
        }
        return _results;
      })();
      this.store.writeAll(keyValues, function() {
        if (cb) {
          return cb(null, hashs);
        }
      });
      return hashs;
    };

    ContentAddressable.prototype.readAll = function(hashs, cb) {
      if (cb) {
        return this.store.readAll(hashs, cb);
      } else {
        return this.store.readAll(hashs);
      }
    };

    return ContentAddressable;

  })();

  module.exports = {
    Interface: ContentAddressable,
    memory: function() {
      return new ContentAddressable({
        store: require('pluggable-store').memory()
      });
    },
    fileSystem: function() {
      var args, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return new ContentAddressable({
        store: (_ref = require('pluggable-store').server).fileSystem.apply(_ref, args)
      });
    }
  };

}).call(this);
